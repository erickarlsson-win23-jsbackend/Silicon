@attribute [StreamRendering]



        
@if(user == null){
    <p>Loading...</p>
}
else
{
    <div class="profile-info">
        <div class="profile-image">
            <img src="/images/uploads/profiles/@user.ProfileImage" alt="@user.FirstName @user.LastName" ) />


            <EditForm Model="@uploadModel" OnValidSubmit="HandleProfileImageUpload">
                <InputFile id="fileUploader" OnChange="HandleFileSelected" hidden />
                <label for="fileUploader" class="btn-gray btn-circle btn-circle-sm"><i class="fa-solid fa-arrows-rotate"></i></label>
            </EditForm>
        </div>
        <h5>@user.FirstName @user.LastName</h5>
        <p>@user.Email</p>
    </div>
}


@code {
    [Parameter]
    public ApplicationUser user { get; set; } = default!;
    private MultipartFormDataContent uploadModel = new MultipartFormDataContent();
    private IBrowserFile? selectedFile;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserDataAsync();

    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task LoadUserDataAsync()
    {
        user = await UserManager.GetUserAsync(HttpContext.User) ?? null!;
    }


    public async Task HandleProfileImageUpload()
    {

        try
        {
            using var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile.Name);
           
            var response = await Http.PostAsync(Environment.GetEnvironmentVariable("FILEPROVIDER_UPLOAD_URI"), content);
            if (response.IsSuccessStatusCode)
            {
                await LoadUserDataAsync();

                StateHasChanged();
            }
            else
            {

            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
